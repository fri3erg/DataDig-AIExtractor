{% if environment or parse_wrap(table_styles, caption) %***REMOVED***
\begin{% raw %***REMOVED***{{% endraw %***REMOVED***{{environment if environment else "table"***REMOVED******REMOVED***{% raw %***REMOVED******REMOVED***{% endraw %***REMOVED***
{%- set position = parse_table(table_styles, 'position') %***REMOVED***
{%- if position is not none %***REMOVED***
[{{position***REMOVED******REMOVED***]
{%- endif %***REMOVED***

{% set position_float = parse_table(table_styles, 'position_float') %***REMOVED***
{% if position_float is not none%***REMOVED***
\{{position_float***REMOVED******REMOVED***
{% endif %***REMOVED***
{% if caption and caption is string %***REMOVED***
\caption{% raw %***REMOVED***{{% endraw %***REMOVED***{{caption***REMOVED******REMOVED***{% raw %***REMOVED******REMOVED***{% endraw %***REMOVED***

{% elif caption and caption is sequence %***REMOVED***
\caption[{{caption[1]***REMOVED******REMOVED***]{% raw %***REMOVED***{{% endraw %***REMOVED***{{caption[0]***REMOVED******REMOVED***{% raw %***REMOVED******REMOVED***{% endraw %***REMOVED***

{% endif %***REMOVED***
{% for style in table_styles %***REMOVED***
{% if style['selector'] not in ['position', 'position_float', 'caption', 'toprule', 'midrule', 'bottomrule', 'column_format'] %***REMOVED***
\{{style['selector']***REMOVED******REMOVED***{{parse_table(table_styles, style['selector'])***REMOVED******REMOVED***
{% endif %***REMOVED***
{% endfor %***REMOVED***
{% endif %***REMOVED***
\begin{tabular***REMOVED***
{%- set column_format = parse_table(table_styles, 'column_format') %***REMOVED***
{% raw %***REMOVED***{{% endraw %***REMOVED***{{column_format***REMOVED******REMOVED***{% raw %***REMOVED******REMOVED***{% endraw %***REMOVED***

{% set toprule = parse_table(table_styles, 'toprule') %***REMOVED***
{% if toprule is not none %***REMOVED***
\{{toprule***REMOVED******REMOVED***
{% endif %***REMOVED***
{% for row in head %***REMOVED***
{% for c in row %***REMOVED***{%- if not loop.first %***REMOVED*** & {% endif %***REMOVED***{{parse_header(c, multirow_align, multicol_align, siunitx, convert_css)***REMOVED******REMOVED***{% endfor %***REMOVED*** \\
{% endfor %***REMOVED***
{% set midrule = parse_table(table_styles, 'midrule') %***REMOVED***
{% if midrule is not none %***REMOVED***
\{{midrule***REMOVED******REMOVED***
{% endif %***REMOVED***
{% for row in body %***REMOVED***
{% for c in row %***REMOVED***{% if not loop.first %***REMOVED*** & {% endif %***REMOVED***
  {%- if c.type == 'th' %***REMOVED***{{parse_header(c, multirow_align, multicol_align, False, convert_css)***REMOVED******REMOVED***{% else %***REMOVED***{{parse_cell(c.cellstyle, c.display_value, convert_css)***REMOVED******REMOVED***{% endif %***REMOVED***
{%- endfor %***REMOVED*** \\
{% if clines and clines[loop.index] | length > 0 %***REMOVED***
  {%- for cline in clines[loop.index] %***REMOVED***{% if not loop.first %***REMOVED*** {% endif %***REMOVED***{{ cline ***REMOVED******REMOVED***{% endfor %***REMOVED***

{% endif %***REMOVED***
{% endfor %***REMOVED***
{% set bottomrule = parse_table(table_styles, 'bottomrule') %***REMOVED***
{% if bottomrule is not none %***REMOVED***
\{{bottomrule***REMOVED******REMOVED***
{% endif %***REMOVED***
\end{tabular***REMOVED***
{% if environment or parse_wrap(table_styles, caption) %***REMOVED***
\end{% raw %***REMOVED***{{% endraw %***REMOVED***{{environment if environment else "table"***REMOVED******REMOVED***{% raw %***REMOVED******REMOVED***{% endraw %***REMOVED***

{% endif %***REMOVED***
