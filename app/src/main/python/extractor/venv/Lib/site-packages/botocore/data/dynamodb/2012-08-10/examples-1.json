{
  "version": "1.0",
  "examples": {
    "BatchGetItem": [
      {
        "input": {
          "RequestItems": {
            "Music": {
              "Keys": [
                {
                  "Artist": {
                    "S": "No One You Know"
                  ***REMOVED***,
                  "SongTitle": {
                    "S": "Call Me Today"
                  ***REMOVED***
                ***REMOVED***,
                {
                  "Artist": {
                    "S": "Acme Band"
                  ***REMOVED***,
                  "SongTitle": {
                    "S": "Happy Day"
                  ***REMOVED***
                ***REMOVED***,
                {
                  "Artist": {
                    "S": "No One You Know"
                  ***REMOVED***,
                  "SongTitle": {
                    "S": "Scared of My Shadow"
                  ***REMOVED***
                ***REMOVED***
              ],
              "ProjectionExpression": "AlbumTitle"
            ***REMOVED***
          ***REMOVED***
        ***REMOVED***,
        "output": {
          "Responses": {
            "Music": [
              {
                "AlbumTitle": {
                  "S": "Somewhat Famous"
                ***REMOVED***
              ***REMOVED***,
              {
                "AlbumTitle": {
                  "S": "Blue Sky Blues"
                ***REMOVED***
              ***REMOVED***,
              {
                "AlbumTitle": {
                  "S": "Louder Than Ever"
                ***REMOVED***
              ***REMOVED***
            ]
          ***REMOVED***
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example reads multiple items from the Music table using a batch of three GetItem requests.  Only the AlbumTitle attribute is returned.",
        "id": "to-retrieve-multiple-items-from-a-table-1476118438992",
        "title": "To retrieve multiple items from a table"
      ***REMOVED***
    ],
    "BatchWriteItem": [
      {
        "input": {
          "RequestItems": {
            "Music": [
              {
                "PutRequest": {
                  "Item": {
                    "AlbumTitle": {
                      "S": "Somewhat Famous"
                    ***REMOVED***,
                    "Artist": {
                      "S": "No One You Know"
                    ***REMOVED***,
                    "SongTitle": {
                      "S": "Call Me Today"
                    ***REMOVED***
                  ***REMOVED***
                ***REMOVED***
              ***REMOVED***,
              {
                "PutRequest": {
                  "Item": {
                    "AlbumTitle": {
                      "S": "Songs About Life"
                    ***REMOVED***,
                    "Artist": {
                      "S": "Acme Band"
                    ***REMOVED***,
                    "SongTitle": {
                      "S": "Happy Day"
                    ***REMOVED***
                  ***REMOVED***
                ***REMOVED***
              ***REMOVED***,
              {
                "PutRequest": {
                  "Item": {
                    "AlbumTitle": {
                      "S": "Blue Sky Blues"
                    ***REMOVED***,
                    "Artist": {
                      "S": "No One You Know"
                    ***REMOVED***,
                    "SongTitle": {
                      "S": "Scared of My Shadow"
                    ***REMOVED***
                  ***REMOVED***
                ***REMOVED***
              ***REMOVED***
            ]
          ***REMOVED***
        ***REMOVED***,
        "output": {
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example adds three new items to the Music table using a batch of three PutItem requests.",
        "id": "to-add-multiple-items-to-a-table-1476118519747",
        "title": "To add multiple items to a table"
      ***REMOVED***
    ],
    "CreateTable": [
      {
        "input": {
          "AttributeDefinitions": [
            {
              "AttributeName": "Artist",
              "AttributeType": "S"
            ***REMOVED***,
            {
              "AttributeName": "SongTitle",
              "AttributeType": "S"
            ***REMOVED***
          ],
          "KeySchema": [
            {
              "AttributeName": "Artist",
              "KeyType": "HASH"
            ***REMOVED***,
            {
              "AttributeName": "SongTitle",
              "KeyType": "RANGE"
            ***REMOVED***
          ],
          "ProvisionedThroughput": {
            "ReadCapacityUnits": 5,
            "WriteCapacityUnits": 5
          ***REMOVED***,
          "TableName": "Music"
        ***REMOVED***,
        "output": {
          "TableDescription": {
            "AttributeDefinitions": [
              {
                "AttributeName": "Artist",
                "AttributeType": "S"
              ***REMOVED***,
              {
                "AttributeName": "SongTitle",
                "AttributeType": "S"
              ***REMOVED***
            ],
            "CreationDateTime": "1421866952.062",
            "ItemCount": 0,
            "KeySchema": [
              {
                "AttributeName": "Artist",
                "KeyType": "HASH"
              ***REMOVED***,
              {
                "AttributeName": "SongTitle",
                "KeyType": "RANGE"
              ***REMOVED***
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            ***REMOVED***,
            "TableName": "Music",
            "TableSizeBytes": 0,
            "TableStatus": "CREATING"
          ***REMOVED***
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example creates a table named Music.",
        "id": "to-create-a-table-1476116291743",
        "title": "To create a table"
      ***REMOVED***
    ],
    "DeleteItem": [
      {
        "input": {
          "Key": {
            "Artist": {
              "S": "No One You Know"
            ***REMOVED***,
            "SongTitle": {
              "S": "Scared of My Shadow"
            ***REMOVED***
          ***REMOVED***,
          "TableName": "Music"
        ***REMOVED***,
        "output": {
          "ConsumedCapacity": {
            "CapacityUnits": 1,
            "TableName": "Music"
          ***REMOVED***
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example deletes an item from the Music table.",
        "id": "to-delete-an-item-1475884573758",
        "title": "To delete an item"
      ***REMOVED***
    ],
    "DeleteTable": [
      {
        "input": {
          "TableName": "Music"
        ***REMOVED***,
        "output": {
          "TableDescription": {
            "ItemCount": 0,
            "ProvisionedThroughput": {
              "NumberOfDecreasesToday": 1,
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            ***REMOVED***,
            "TableName": "Music",
            "TableSizeBytes": 0,
            "TableStatus": "DELETING"
          ***REMOVED***
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example deletes the Music table.",
        "id": "to-delete-a-table-1475884368755",
        "title": "To delete a table"
      ***REMOVED***
    ],
    "DescribeLimits": [
      {
        "input": {
        ***REMOVED***,
        "output": {
          "AccountMaxReadCapacityUnits": 20000,
          "AccountMaxWriteCapacityUnits": 20000,
          "TableMaxReadCapacityUnits": 10000,
          "TableMaxWriteCapacityUnits": 10000
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "The following example returns the maximum read and write capacity units per table, and for the AWS account, in the current AWS region.",
        "id": "to-determine-capacity-limits-per-table-and-account-in-the-current-aws-region-1475884162064",
        "title": "To determine capacity limits per table and account, in the current AWS region"
      ***REMOVED***
    ],
    "DescribeTable": [
      {
        "input": {
          "TableName": "Music"
        ***REMOVED***,
        "output": {
          "Table": {
            "AttributeDefinitions": [
              {
                "AttributeName": "Artist",
                "AttributeType": "S"
              ***REMOVED***,
              {
                "AttributeName": "SongTitle",
                "AttributeType": "S"
              ***REMOVED***
            ],
            "CreationDateTime": "1421866952.062",
            "ItemCount": 0,
            "KeySchema": [
              {
                "AttributeName": "Artist",
                "KeyType": "HASH"
              ***REMOVED***,
              {
                "AttributeName": "SongTitle",
                "KeyType": "RANGE"
              ***REMOVED***
            ],
            "ProvisionedThroughput": {
              "NumberOfDecreasesToday": 1,
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            ***REMOVED***,
            "TableName": "Music",
            "TableSizeBytes": 0,
            "TableStatus": "ACTIVE"
          ***REMOVED***
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example describes the Music table.",
        "id": "to-describe-a-table-1475884440502",
        "title": "To describe a table"
      ***REMOVED***
    ],
    "GetItem": [
      {
        "input": {
          "Key": {
            "Artist": {
              "S": "Acme Band"
            ***REMOVED***,
            "SongTitle": {
              "S": "Happy Day"
            ***REMOVED***
          ***REMOVED***,
          "TableName": "Music"
        ***REMOVED***,
        "output": {
          "Item": {
            "AlbumTitle": {
              "S": "Songs About Life"
            ***REMOVED***,
            "Artist": {
              "S": "Acme Band"
            ***REMOVED***,
            "SongTitle": {
              "S": "Happy Day"
            ***REMOVED***
          ***REMOVED***
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example retrieves an item from the Music table. The table has a partition key and a sort key (Artist and SongTitle), so you must specify both of these attributes.",
        "id": "to-read-an-item-from-a-table-1475884258350",
        "title": "To read an item from a table"
      ***REMOVED***
    ],
    "ListTables": [
      {
        "input": {
        ***REMOVED***,
        "output": {
          "TableNames": [
            "Forum",
            "ProductCatalog",
            "Reply",
            "Thread"
          ]
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example lists all of the tables associated with the current AWS account and endpoint.",
        "id": "to-list-tables-1475884741238",
        "title": "To list tables"
      ***REMOVED***
    ],
    "PutItem": [
      {
        "input": {
          "Item": {
            "AlbumTitle": {
              "S": "Somewhat Famous"
            ***REMOVED***,
            "Artist": {
              "S": "No One You Know"
            ***REMOVED***,
            "SongTitle": {
              "S": "Call Me Today"
            ***REMOVED***
          ***REMOVED***,
          "ReturnConsumedCapacity": "TOTAL",
          "TableName": "Music"
        ***REMOVED***,
        "output": {
          "ConsumedCapacity": {
            "CapacityUnits": 1,
            "TableName": "Music"
          ***REMOVED***
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example adds a new item to the Music table.",
        "id": "to-add-an-item-to-a-table-1476116191110",
        "title": "To add an item to a table"
      ***REMOVED***
    ],
    "Query": [
      {
        "input": {
          "ExpressionAttributeValues": {
            ":v1": {
              "S": "No One You Know"
            ***REMOVED***
          ***REMOVED***,
          "KeyConditionExpression": "Artist = :v1",
          "ProjectionExpression": "SongTitle",
          "TableName": "Music"
        ***REMOVED***,
        "output": {
          "ConsumedCapacity": {
          ***REMOVED***,
          "Count": 2,
          "Items": [
            {
              "SongTitle": {
                "S": "Call Me Today"
              ***REMOVED***
            ***REMOVED***
          ],
          "ScannedCount": 2
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example queries items in the Music table. The table has a partition key and sort key (Artist and SongTitle), but this query only specifies the partition key value. It returns song titles by the artist named \"No One You Know\".",
        "id": "to-query-an-item-1475883874631",
        "title": "To query an item"
      ***REMOVED***
    ],
    "Scan": [
      {
        "input": {
          "ExpressionAttributeNames": {
            "#AT": "AlbumTitle",
            "#ST": "SongTitle"
          ***REMOVED***,
          "ExpressionAttributeValues": {
            ":a": {
              "S": "No One You Know"
            ***REMOVED***
          ***REMOVED***,
          "FilterExpression": "Artist = :a",
          "ProjectionExpression": "#ST, #AT",
          "TableName": "Music"
        ***REMOVED***,
        "output": {
          "ConsumedCapacity": {
          ***REMOVED***,
          "Count": 2,
          "Items": [
            {
              "AlbumTitle": {
                "S": "Somewhat Famous"
              ***REMOVED***,
              "SongTitle": {
                "S": "Call Me Today"
              ***REMOVED***
            ***REMOVED***,
            {
              "AlbumTitle": {
                "S": "Blue Sky Blues"
              ***REMOVED***,
              "SongTitle": {
                "S": "Scared of My Shadow"
              ***REMOVED***
            ***REMOVED***
          ],
          "ScannedCount": 3
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example scans the entire Music table, and then narrows the results to songs by the artist \"No One You Know\". For each item, only the album title and song title are returned.",
        "id": "to-scan-a-table-1475883652470",
        "title": "To scan a table"
      ***REMOVED***
    ],
    "UpdateItem": [
      {
        "input": {
          "ExpressionAttributeNames": {
            "#AT": "AlbumTitle",
            "#Y": "Year"
          ***REMOVED***,
          "ExpressionAttributeValues": {
            ":t": {
              "S": "Louder Than Ever"
            ***REMOVED***,
            ":y": {
              "N": "2015"
            ***REMOVED***
          ***REMOVED***,
          "Key": {
            "Artist": {
              "S": "Acme Band"
            ***REMOVED***,
            "SongTitle": {
              "S": "Happy Day"
            ***REMOVED***
          ***REMOVED***,
          "ReturnValues": "ALL_NEW",
          "TableName": "Music",
          "UpdateExpression": "SET #Y = :y, #AT = :t"
        ***REMOVED***,
        "output": {
          "Attributes": {
            "AlbumTitle": {
              "S": "Louder Than Ever"
            ***REMOVED***,
            "Artist": {
              "S": "Acme Band"
            ***REMOVED***,
            "SongTitle": {
              "S": "Happy Day"
            ***REMOVED***,
            "Year": {
              "N": "2015"
            ***REMOVED***
          ***REMOVED***
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example updates an item in the Music table. It adds a new attribute (Year) and modifies the AlbumTitle attribute.  All of the attributes in the item, as they appear after the update, are returned in the response.",
        "id": "to-update-an-item-in-a-table-1476118250055",
        "title": "To update an item in a table"
      ***REMOVED***
    ],
    "UpdateTable": [
      {
        "input": {
          "ProvisionedThroughput": {
            "ReadCapacityUnits": 10,
            "WriteCapacityUnits": 10
          ***REMOVED***,
          "TableName": "MusicCollection"
        ***REMOVED***,
        "output": {
          "TableDescription": {
            "AttributeDefinitions": [
              {
                "AttributeName": "Artist",
                "AttributeType": "S"
              ***REMOVED***,
              {
                "AttributeName": "SongTitle",
                "AttributeType": "S"
              ***REMOVED***
            ],
            "CreationDateTime": "1421866952.062",
            "ItemCount": 0,
            "KeySchema": [
              {
                "AttributeName": "Artist",
                "KeyType": "HASH"
              ***REMOVED***,
              {
                "AttributeName": "SongTitle",
                "KeyType": "RANGE"
              ***REMOVED***
            ],
            "ProvisionedThroughput": {
              "LastIncreaseDateTime": "1421874759.194",
              "NumberOfDecreasesToday": 1,
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            ***REMOVED***,
            "TableName": "MusicCollection",
            "TableSizeBytes": 0,
            "TableStatus": "UPDATING"
          ***REMOVED***
        ***REMOVED***,
        "comments": {
          "input": {
          ***REMOVED***,
          "output": {
          ***REMOVED***
        ***REMOVED***,
        "description": "This example increases the provisioned read and write capacity on the Music table.",
        "id": "to-modify-a-tables-provisioned-throughput-1476118076147",
        "title": "To modify a table's provisioned throughput"
      ***REMOVED***
    ]
  ***REMOVED***
***REMOVED***
